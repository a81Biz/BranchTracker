name: Deploy to UAT
true:
  pull_request:
    branches:
    - uat
jobs:
  validate-commit:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Fetch all tags from origin
      run: 'git fetch --tags

        '
    - id: get_branch_name
      name: Get the branch name
      run: 'BRANCH_NAME=$(echo "${GITHUB_HEAD_REF}")

        echo "branch_name=$BRANCH_NAME" >> $GITHUB_ENV

        '
    - id: find_tag
      name: Find the latest approved tag for the branch
      run: "# Busca el tag en ambos formatos: con y sin estado\nTAG_NAME_WITH_STATE=$(git\
        \ tag -l \"${{ env.branch_name }}-qa-approved*\" | tail -n 1)\nTAG_NAME_NO_STATE=$(echo\
        \ \"${{ env.branch_name }}\" | sed 's/\\/[a-zA-Z0-9_-]*//' | xargs -I{} git\
        \ tag -l \"{}-qa-approved*\" | tail -n 1)\n# Prioriza el tag con estado, pero\
        \ si no existe, usa el sin estado\nif [ -z \"$TAG_NAME_WITH_STATE\" ]; then\n\
        \  echo \"tag_name=$TAG_NAME_NO_STATE\" >> $GITHUB_ENV\nelse\n  echo \"tag_name=$TAG_NAME_WITH_STATE\"\
        \ >> $GITHUB_ENV\nfi\n"
    - id: get_qa_commit
      name: Get commit from the approved tag in QA
      run: 'QA_COMMIT=$(git rev-parse ${{ env.tag_name }})

        echo "qa_commit=$QA_COMMIT" >> $GITHUB_ENV

        '
    - id: get_dev_commit
      name: Get latest commit from DEV
      run: 'DEV_COMMIT=$(git rev-parse origin/${{ env.branch_name }})

        echo "dev_commit=$DEV_COMMIT" >> $GITHUB_ENV

        '
    - id: check_commit
      name: Validate commit from DEV matches the tagged commit from QA
      run: "if [ \"${{ env.qa_commit }}\" != \"${{ env.dev_commit }}\" ]; then\n \
        \ echo \"The commit in DEV does not match the approved commit in QA. Exiting.\"\
        \n  exit 1\nelse\n  echo \"The commit in DEV matches the approved commit in\
        \ QA.\"\nfi\n"
    - if: success()
      name: Deploy to UAT
      uses: peaceiris/actions-gh-pages@v4
      with:
        cname: uat.sitio.com
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build