name: Sync master prod

on:
  workflow_run:
    workflows: ["Deploy to Production"]
    types:
      - completed

jobs:
  sync-master:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout prod branch
        uses: actions/checkout@v4
        with:
          ref: prod

      - name: Checkout master branch
        run: |
          git fetch origin master
          git checkout master

      - name: Merge prod into master
        run: |
          git config --global user.email "${{ secrets.EMAIL }}"
          git config --global user.name "${{ secrets.REPO_ACTOR }}"
          git merge prod --allow-unrelated-histories

      - name: Push to master
        run: |
          git push origin master

      - name: Fetch the tag with the branch name
        run: |
          git fetch --tags
          DEPLOYED_BRANCH=$(git tag --contains | grep deployed | sed 's/-deployed//')
          echo "Deployed branch is $DEPLOYED_BRANCH"
          echo "deployed_branch=$DEPLOYED_BRANCH" >> $GITHUB_ENV

      - name: Delete the deployed branch
        run: |
          if [ -z "${{ env.deployed_branch }}" ]; then
            echo "Error: No deployed branch found"
            exit 1
          fi
          if [ "${{ env.deployed_branch }}" != "master" ] && [ "${{ env.deployed_branch }}" != "prod" ] && [ "${{ env.deployed_branch }}" != "uat" ]; then
            echo "Deleting deployed branch ${{ env.deployed_branch }}"
            echo "git push origin --delete ${{ env.deployed_branch }}"
          else
            echo "Skipping deletion of protected branch ${{ env.deployed_branch }}"
          fi